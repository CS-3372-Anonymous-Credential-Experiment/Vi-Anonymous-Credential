{"$message_type":"diagnostic","message":"unused import: `serde_json::json`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":252,"byte_end":268,"line_start":9,"line_end":9,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use serde_json::json;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":248,"byte_end":270,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use serde_json::json;","highlight_start":1,"highlight_end":22},{"text":"use std::ops::Mul;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `serde_json::json`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde_json::json;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary trailing semicolon","code":{"code":"redundant_semicolons","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":5132,"byte_end":5133,"line_start":159,"line_end":159,"column_start":76,"column_end":77,"is_primary":true,"text":[{"text":"let input: CircuitInput = serde_json::from_str(&json_str).expect(\"REASON\");;","highlight_start":76,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(redundant_semicolons)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this semicolon","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":5132,"byte_end":5133,"line_start":159,"line_end":159,"column_start":76,"column_end":77,"is_primary":true,"text":[{"text":"let input: CircuitInput = serde_json::from_str(&json_str).expect(\"REASON\");;","highlight_start":76,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary trailing semicolon\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:159:76\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet input: CircuitInput = serde_json::from_str(&json_str).expect(\"REASON\");;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this semicolon\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(redundant_semicolons)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `x_times_sig`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":2198,"byte_end":2209,"line_start":83,"line_end":83,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":34,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":2198,"byte_end":2209,"line_start":83,"line_end":83,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":34,"highlight_end":45}],"label":null,"suggested_replacement":"_x_times_sig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `x_times_sig`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:83:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_x_times_sig`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `x_times_rho`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":2211,"byte_end":2222,"line_start":83,"line_end":83,"column_start":47,"column_end":58,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":47,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":2211,"byte_end":2222,"line_start":83,"line_end":83,"column_start":47,"column_end":58,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":47,"highlight_end":58}],"label":null,"suggested_replacement":"_x_times_rho","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `x_times_rho`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:83:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_x_times_rho`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `e_z_j`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":3724,"byte_end":3729,"line_start":124,"line_end":124,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"let e_z_j = compute_pairing(_z.into_affine(), _j.into_affine());","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":3724,"byte_end":3729,"line_start":124,"line_end":124,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"let e_z_j = compute_pairing(_z.into_affine(), _j.into_affine());","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":"_e_z_j","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_z_j`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:124:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet e_z_j = compute_pairing(_z.into_affine(), _j.into_affine());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_z_j`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `e_z_g2_x`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":3856,"byte_end":3864,"line_start":126,"line_end":126,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"let e_z_g2_x = e_z_g2.mul(_carol.get_cred().get_x_val());","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":3856,"byte_end":3864,"line_start":126,"line_end":126,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"let e_z_g2_x = e_z_g2.mul(_carol.get_cred().get_x_val());","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"_e_z_g2_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_z_g2_x`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:126:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet e_z_g2_x = e_z_g2.mul(_carol.get_cred().get_x_val());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_z_g2_x`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `e_alpha_g2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":3914,"byte_end":3924,"line_start":127,"line_end":127,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"let e_alpha_g2 = compute_pairing(_acc.get_alpha().into_affine(), _g2.into_affine());","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":3914,"byte_end":3924,"line_start":127,"line_end":127,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"let e_alpha_g2 = compute_pairing(_acc.get_alpha().into_affine(), _g2.into_affine());","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"_e_alpha_g2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_alpha_g2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:127:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet e_alpha_g2 = compute_pairing(_acc.get_alpha().into_affine(), _g2.into_affine());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_alpha_g2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `json_str_new`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":4928,"byte_end":4940,"line_start":158,"line_end":158,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"let json_str_new = fs::read_to_string(\"/home/accumulator/Vi-Anonymous-Credential/Accumulator/Accumulator_CA/prover/src/input.json\");","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":4928,"byte_end":4940,"line_start":158,"line_end":158,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"let json_str_new = fs::read_to_string(\"/home/accumulator/Vi-Anonymous-Credential/Accumulator/Accumulator_CA/prover/src/input.json\");","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"_json_str_new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `json_str_new`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:158:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet json_str_new = fs::read_to_string(\"/home/accumulator/Vi-Anonymous-Credential/Accumulator/Accumulator_CA/prover/src/i\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_json_str_new`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Cx_hash_words` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":530,"byte_end":543,"line_start":21,"line_end":21,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    Cx_hash_words: [u32; 8],","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":530,"byte_end":543,"line_start":21,"line_end":21,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    Cx_hash_words: [u32; 8],","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"cx_hash_words","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Cx_hash_words` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cx_hash_words: [u32; 8],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cx_hash_words`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Cw_hash_words` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":559,"byte_end":572,"line_start":22,"line_end":22,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    Cw_hash_words: [u32; 8],","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":559,"byte_end":572,"line_start":22,"line_end":22,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    Cw_hash_words: [u32; 8],","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"cw_hash_words","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Cw_hash_words` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cw_hash_words: [u32; 8],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cw_hash_words`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Csigma_hash_words` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":588,"byte_end":605,"line_start":23,"line_end":23,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    Csigma_hash_words: [u32; 8],","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":588,"byte_end":605,"line_start":23,"line_end":23,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    Csigma_hash_words: [u32; 8],","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"csigma_hash_words","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Csigma_hash_words` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Csigma_hash_words: [u32; 8],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `csigma_hash_words`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Crho_hash_words` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":621,"byte_end":636,"line_start":24,"line_end":24,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    Crho_hash_words: [u32; 8],","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":621,"byte_end":636,"line_start":24,"line_end":24,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    Crho_hash_words: [u32; 8],","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"crho_hash_words","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Crho_hash_words` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Crho_hash_words: [u32; 8],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `crho_hash_words`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Cx_bytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":758,"byte_end":766,"line_start":31,"line_end":31,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    Cx_bytes: Vec<u8>,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":758,"byte_end":766,"line_start":31,"line_end":31,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    Cx_bytes: Vec<u8>,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"cx_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Cx_bytes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:31:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cx_bytes: Vec<u8>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cx_bytes`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Cw_bytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":781,"byte_end":789,"line_start":32,"line_end":32,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    Cw_bytes: Vec<u8>,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":781,"byte_end":789,"line_start":32,"line_end":32,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    Cw_bytes: Vec<u8>,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"cw_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Cw_bytes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:32:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cw_bytes: Vec<u8>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cw_bytes`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Csigma_bytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":804,"byte_end":816,"line_start":33,"line_end":33,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    Csigma_bytes: Vec<u8>,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":804,"byte_end":816,"line_start":33,"line_end":33,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    Csigma_bytes: Vec<u8>,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"csigma_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Csigma_bytes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Csigma_bytes: Vec<u8>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `csigma_bytes`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Crho_bytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":831,"byte_end":841,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    Crho_bytes: Vec<u8>,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":831,"byte_end":841,"line_start":34,"line_end":34,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    Crho_bytes: Vec<u8>,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"crho_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Crho_bytes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:34:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Crho_bytes: Vec<u8>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `crho_bytes`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Cw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":2170,"byte_end":2172,"line_start":83,"line_end":83,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":2170,"byte_end":2172,"line_start":83,"line_end":83,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":"cw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Cw` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:83:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Csigma` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":2174,"byte_end":2180,"line_start":83,"line_end":83,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":2174,"byte_end":2180,"line_start":83,"line_end":83,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"csigma","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Csigma` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:83:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `csigma`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Crho` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":2182,"byte_end":2186,"line_start":83,"line_end":83,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":2182,"byte_end":2186,"line_start":83,"line_end":83,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":"crho","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Crho` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:83:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `crho`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Cx_point` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":2188,"byte_end":2196,"line_start":83,"line_end":83,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":2188,"byte_end":2196,"line_start":83,"line_end":83,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":"cx_point","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Cx_point` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:83:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, sigma, rho) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cx_point`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Cw_hash` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":2709,"byte_end":2716,"line_start":97,"line_end":97,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"let Cw_hash = Sha256::digest(&bytes_cw);","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":2709,"byte_end":2716,"line_start":97,"line_end":97,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"let Cw_hash = Sha256::digest(&bytes_cw);","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"cw_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Cw_hash` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:97:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet Cw_hash = Sha256::digest(&bytes_cw);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cw_hash`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Csigma_hash` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":2983,"byte_end":2994,"line_start":103,"line_end":103,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"let Csigma_hash = Sha256::digest(&bytes_csig);","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":2983,"byte_end":2994,"line_start":103,"line_end":103,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"let Csigma_hash = Sha256::digest(&bytes_csig);","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"csigma_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Csigma_hash` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:103:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet Csigma_hash = Sha256::digest(&bytes_csig);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `csigma_hash`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Crho_hash` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":3276,"byte_end":3285,"line_start":110,"line_end":110,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"let Crho_hash = Sha256::digest(&bytes_crho);","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":3276,"byte_end":3285,"line_start":110,"line_end":110,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"let Crho_hash = Sha256::digest(&bytes_crho);","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"crho_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Crho_hash` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:110:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet Crho_hash = Sha256::digest(&bytes_crho);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `crho_hash`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Cx_hash` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"prover/src/main.rs","byte_start":3561,"byte_end":3568,"line_start":117,"line_end":117,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"let Cx_hash = Sha256::digest(&bytes_cx);","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"prover/src/main.rs","byte_start":3561,"byte_end":3568,"line_start":117,"line_end":117,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"let Cx_hash = Sha256::digest(&bytes_cx);","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"cx_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Cx_hash` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprover/src/main.rs:117:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet Cx_hash = Sha256::digest(&bytes_cx);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cx_hash`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"24 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 24 warnings emitted\u001b[0m\n\n"}
