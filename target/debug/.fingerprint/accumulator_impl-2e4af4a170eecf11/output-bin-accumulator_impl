{"$message_type":"diagnostic","message":"unused import: `serde_json::json`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":252,"byte_end":268,"line_start":9,"line_end":9,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use serde_json::json;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":248,"byte_end":270,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use serde_json::json;","highlight_start":1,"highlight_end":22},{"text":"use std::ops::Mul;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `serde_json::json`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde_json::json;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `x_times_sig`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5563,"byte_end":5574,"line_start":164,"line_end":164,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":34,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5563,"byte_end":5574,"line_start":164,"line_end":164,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":34,"highlight_end":45}],"label":null,"suggested_replacement":"_x_times_sig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `x_times_sig`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:164:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_x_times_sig`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `x_times_rho`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5576,"byte_end":5587,"line_start":164,"line_end":164,"column_start":47,"column_end":58,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":47,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5576,"byte_end":5587,"line_start":164,"line_end":164,"column_start":47,"column_end":58,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":47,"highlight_end":58}],"label":null,"suggested_replacement":"_x_times_rho","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `x_times_rho`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:164:47\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_x_times_rho`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `w_hash`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6066,"byte_end":6072,"line_start":177,"line_end":177,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"let w_hash = Sha256::digest(&bytes_w);","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6066,"byte_end":6072,"line_start":177,"line_end":177,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"let w_hash = Sha256::digest(&bytes_w);","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"_w_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `w_hash`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:177:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet w_hash = Sha256::digest(&bytes_w);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_w_hash`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `cw_words`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6326,"byte_end":6334,"line_start":184,"line_end":184,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"let cw_words = sha256_to_words(&Cw_hash);","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6326,"byte_end":6334,"line_start":184,"line_end":184,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"let cw_words = sha256_to_words(&Cw_hash);","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"_cw_words","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cw_words`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:184:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet cw_words = sha256_to_words(&Cw_hash);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cw_words`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `csig_words`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6606,"byte_end":6616,"line_start":190,"line_end":190,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"let csig_words = sha256_to_words(&Csigma_hash);","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6606,"byte_end":6616,"line_start":190,"line_end":190,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"let csig_words = sha256_to_words(&Csigma_hash);","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"_csig_words","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `csig_words`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:190:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet csig_words = sha256_to_words(&Csigma_hash);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_csig_words`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `crho_words`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6897,"byte_end":6907,"line_start":197,"line_end":197,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"let crho_words = sha256_to_words(&Crho_hash);","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6897,"byte_end":6907,"line_start":197,"line_end":197,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"let crho_words = sha256_to_words(&Crho_hash);","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"_crho_words","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `crho_words`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:197:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet crho_words = sha256_to_words(&Crho_hash);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_crho_words`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `cx_words`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7178,"byte_end":7186,"line_start":204,"line_end":204,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"let cx_words = sha256_to_words(&Cx_hash);","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7178,"byte_end":7186,"line_start":204,"line_end":204,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"let cx_words = sha256_to_words(&Cx_hash);","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"_cx_words","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cx_words`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:204:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet cx_words = sha256_to_words(&Cx_hash);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cx_words`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `e_z_j`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7300,"byte_end":7305,"line_start":210,"line_end":210,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"let e_z_j = compute_pairing(_z.into_affine(), _j.into_affine());","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7300,"byte_end":7305,"line_start":210,"line_end":210,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"let e_z_j = compute_pairing(_z.into_affine(), _j.into_affine());","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":"_e_z_j","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_z_j`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:210:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet e_z_j = compute_pairing(_z.into_affine(), _j.into_affine());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_z_j`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `e_z_g2_x`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7432,"byte_end":7440,"line_start":212,"line_end":212,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"let e_z_g2_x = e_z_g2.mul(_carol.get_cred().get_x_val());","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7432,"byte_end":7440,"line_start":212,"line_end":212,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"let e_z_g2_x = e_z_g2.mul(_carol.get_cred().get_x_val());","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"_e_z_g2_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_z_g2_x`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:212:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet e_z_g2_x = e_z_g2.mul(_carol.get_cred().get_x_val());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_z_g2_x`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `e_alpha_g2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7490,"byte_end":7500,"line_start":213,"line_end":213,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"let e_alpha_g2 = compute_pairing(_acc.get_alpha().into_affine(), _g2.into_affine());","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7490,"byte_end":7500,"line_start":213,"line_end":213,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"let e_alpha_g2 = compute_pairing(_acc.get_alpha().into_affine(), _g2.into_affine());","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"_e_alpha_g2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_alpha_g2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:213:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet e_alpha_g2 = compute_pairing(_acc.get_alpha().into_affine(), _g2.into_affine());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_alpha_g2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Cw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5535,"byte_end":5537,"line_start":164,"line_end":164,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5535,"byte_end":5537,"line_start":164,"line_end":164,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":"cw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Cw` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:164:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cw`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Csigma` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5539,"byte_end":5545,"line_start":164,"line_end":164,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5539,"byte_end":5545,"line_start":164,"line_end":164,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"csigma","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Csigma` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:164:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `csigma`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Crho` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5547,"byte_end":5551,"line_start":164,"line_end":164,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5547,"byte_end":5551,"line_start":164,"line_end":164,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":"crho","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Crho` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:164:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `crho`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Cx_point` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5553,"byte_end":5561,"line_start":164,"line_end":164,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":5553,"byte_end":5561,"line_start":164,"line_end":164,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"let (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":"cx_point","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Cx_point` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:164:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet (Cw, Csigma, Crho, Cx_point, x_times_sig, x_times_rho, _, _) = _carol.prepare_ZKP(_g, _h, _k, _z);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cx_point`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Cw_hash` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6285,"byte_end":6292,"line_start":183,"line_end":183,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"let Cw_hash = Sha256::digest(&bytes_cw);","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6285,"byte_end":6292,"line_start":183,"line_end":183,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"let Cw_hash = Sha256::digest(&bytes_cw);","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"cw_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Cw_hash` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:183:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet Cw_hash = Sha256::digest(&bytes_cw);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cw_hash`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Csigma_hash` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6559,"byte_end":6570,"line_start":189,"line_end":189,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"let Csigma_hash = Sha256::digest(&bytes_csig);","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6559,"byte_end":6570,"line_start":189,"line_end":189,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"let Csigma_hash = Sha256::digest(&bytes_csig);","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"csigma_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Csigma_hash` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:189:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet Csigma_hash = Sha256::digest(&bytes_csig);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `csigma_hash`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Crho_hash` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6852,"byte_end":6861,"line_start":196,"line_end":196,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"let Crho_hash = Sha256::digest(&bytes_crho);","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":6852,"byte_end":6861,"line_start":196,"line_end":196,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"let Crho_hash = Sha256::digest(&bytes_crho);","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"crho_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Crho_hash` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:196:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet Crho_hash = Sha256::digest(&bytes_crho);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `crho_hash`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `Cx_hash` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7137,"byte_end":7144,"line_start":203,"line_end":203,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"let Cx_hash = Sha256::digest(&bytes_cx);","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"accumulator_impl/src/main.rs","byte_start":7137,"byte_end":7144,"line_start":203,"line_end":203,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"let Cx_hash = Sha256::digest(&bytes_cx);","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"cx_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Cx_hash` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0maccumulator_impl/src/main.rs:203:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlet Cx_hash = Sha256::digest(&bytes_cx);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cx_hash`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"19 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 19 warnings emitted\u001b[0m\n\n"}
