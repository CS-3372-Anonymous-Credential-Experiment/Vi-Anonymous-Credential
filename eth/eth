#!/bin/bash

# Simple Ethereum network management commands
# Usage: eth [command]

# Get the script directory - handle both local and global installation
if [ -L "${BASH_SOURCE[0]}" ]; then
    # If this is a symlink (global installation), get the real path
    SCRIPT_DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
else
    # Local installation
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
fi

# Function to show help
show_help() {
    echo "Ethereum Private Network Commands:"
    echo ""
    echo "  eth start          - Start the private Ethereum network"
    echo "  eth stop           - Stop the network"
    echo "  eth restart        - Restart the network"
    echo "  eth status         - Show network status"
    echo "  eth test           - Test network functionality"
    echo "  eth dev-mine       - Start development mining (PoS)"
    echo "  eth send           - Send test transaction"
    echo "  eth balance        - Check account balances"
    echo "  eth console        - Connect to Geth console"
    echo "  eth logs           - Show network logs"
    echo "  eth clean          - Clean up everything"
    echo "  eth help           - Show this help"
    echo ""
    echo "Examples:"
    echo "  eth start          # Start the network"
    echo "  eth status         # Check if running"
    echo "  eth test           # Test RPC endpoints"
    echo ""
}

# Check if manage.sh exists
if [ ! -f "$SCRIPT_DIR/manage.sh" ]; then
    echo "Error: manage.sh not found in $SCRIPT_DIR"
    exit 1
fi

# Make sure manage.sh is executable
chmod +x "$SCRIPT_DIR/manage.sh"

# Parse command
case "$1" in
    "start")
        echo "üöÄ Starting Ethereum network..."
        "$SCRIPT_DIR/manage.sh" start
        ;;
    "stop")
        echo "üõë Stopping Ethereum network..."
        "$SCRIPT_DIR/manage.sh" stop
        ;;
    "restart")
        echo "üîÑ Restarting Ethereum network..."
        "$SCRIPT_DIR/manage.sh" restart
        ;;
    "status")
        echo "üìä Checking network status..."
        "$SCRIPT_DIR/manage.sh" status
        ;;
    "test")
        echo "üß™ Testing network functionality..."
        "$SCRIPT_DIR/manage.sh" test-network
        ;;
    "dev-mine")
        echo "‚õèÔ∏è  Starting development mining..."
        "$SCRIPT_DIR/manage.sh" dev-mine
        ;;
    "send")
        echo "üí∏ Sending test transaction..."
        "$SCRIPT_DIR/manage.sh" send
        ;;
    "balance")
        echo "üí∞ Checking account balances..."
        "$SCRIPT_DIR/manage.sh" balance
        ;;
    "console")
        echo "üíª Connecting to Geth console..."
        "$SCRIPT_DIR/manage.sh" console
        ;;
    "logs")
        echo "üìã Showing network logs..."
        "$SCRIPT_DIR/manage.sh" logs
        ;;
    "clean")
        echo "üßπ Cleaning up network..."
        "$SCRIPT_DIR/manage.sh" clean
        ;;
    "help"|"-h"|"--help"|"")
        show_help
        ;;
    *)
        echo "‚ùå Unknown command: $1"
        echo ""
        show_help
        exit 1
        ;;
esac
